FROM node:22.9.0-alpine AS development

RUN mkdir /nodejs2024Q3-service

WORKDIR /nodejs2024Q3-service

COPY ./package*.json ./

RUN npm ci

COPY . .

FROM node:18-alpine As build

WORKDIR /nodejs2024Q3-service

COPY ./package*.json ./

COPY --from=development /nodejs2024Q3-service/node_modules ./node_modules

COPY . .

RUN npx prisma generate

RUN npm run build

ENV NODE_ENV production

RUN npm ci --omit=dev && npm cache clean --force

RUN wget https://gobinaries.com/tj/node-prune --output-document - | /bin/sh && \
    node-prune

FROM node:22-alpine AS production

ENV PORT=4000

ENV DATABASE_URL="postgresql://musicLover:libraryRSS@postgres:5432/library?schema=public"

RUN mkdir -p /var/log/web/ml && chmod 777 /var/log/web/ml

RUN touch /var/log/web/ml/log-$(date +%Y-%m-%dT%H:%M:%S)

RUN touch /var/log/web/ml/error-$(date +%Y-%m-%dT%H:%M:%S)

WORKDIR /nodejs2024Q3-service

COPY --from=build /nodejs2024Q3-service/dist ./dist
COPY --from=build /nodejs2024Q3-service/prisma ./prisma
COPY --from=build /nodejs2024Q3-service/node_modules ./node_modules

EXPOSE ${PORT}

CMD ["sh", "-c", "npx prisma migrate deploy && node dist/main"]